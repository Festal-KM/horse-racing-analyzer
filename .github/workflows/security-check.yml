name: Security Check

on:
  schedule:
    - cron: '0 0 * * 0'  # 毎週日曜日に実行
  workflow_dispatch:  # 手動実行用

jobs:
  backend-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install safety bandit
          
      - name: Run security check
        run: |
          cd backend
          python scripts/security_check.py --output security_report.json
          
      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: backend-security-report
          path: backend/security_reports/
          
  frontend-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          npm install -g snyk
          
      - name: Run npm audit
        run: |
          cd frontend
          npm audit --json > security_reports/npm_audit_report.json || true
          
      - name: Run security check
        run: |
          cd frontend
          node scripts/security_check.js --output security_report.json
          
      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: frontend-security-report
          path: frontend/security_reports/

  owasp-zap-scan:
    runs-on: ubuntu-latest
    needs: [backend-security, frontend-security]
    steps:
      - uses: actions/checkout@v3
      
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'https://horse-racing-analyzer.vercel.app'  # 本番環境のURL
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          
      - name: Generate OWASP Report
        run: |
          mkdir -p security_reports
          cp zap-baseline-report.html security_reports/owasp_report.html
          
      - name: Upload OWASP report
        uses: actions/upload-artifact@v3
        with:
          name: owasp-scan-report
          path: security_reports/
          
  security-notification:
    runs-on: ubuntu-latest
    needs: [backend-security, frontend-security, owasp-zap-scan]
    if: always()
    steps:
      - name: Download all reports
        uses: actions/download-artifact@v3
        with:
          path: all-reports
          
      - name: Send security notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: 競馬予想ツール - セキュリティチェックレポート
          to: admin@example.com  # 通知先メールアドレス
          from: GitHub Actions
          body: |
            週次セキュリティチェックの結果です。
            詳細はワークフローの成果物を確認してください。
          attachments: all-reports/**/*.json,all-reports/**/*.html 