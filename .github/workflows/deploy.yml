name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Configure Poetry
        run: poetry config virtualenvs.in-project true
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest

  deploy-backend:
    needs: backend-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Render
        uses: JorgeLNJunior/render-deploy@v1.4.3
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          clear_cache: false
          wait_deploy: true
          github_deployment: false

  deploy-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
      - name: Deploy to Vercel
        run: |
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" > .env.production
          vercel deploy --prod --token ${{ secrets.VERCEL_TOKEN }} 